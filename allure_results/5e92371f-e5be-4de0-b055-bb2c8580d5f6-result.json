{"name": "Получение списка с несколькими заказами у конкретоного пользователя", "status": "broken", "statusDetails": {"message": "KeyError: 'orders'", "trace": "self = <tests.test_get_current_user_orders.TestGetCurrentUserOrders object at 0x102509df0>, create_user_and_delete_after_test = <endpoints.get_current_user_orders_endpoint.CurrentUserOrdersEndpoint object at 0x10253fad0>\ncreate_burger = <endpoints.get_current_user_orders_endpoint.CurrentUserOrdersEndpoint object at 0x10253ffe0>, number_of_orders = 50\n\n    @allure.title('Получение списка с несколькими заказами у конкретоного пользователя')\n    @allure.description(\"Тест падает, хотя должен проходить\")\n    @pytest.mark.parametrize('number_of_orders', (1, 2, 25, 49, 50))\n    def test_get_current_user_with_same_orders(self, create_user_and_delete_after_test, create_burger, number_of_orders):\n        user = create_user_and_delete_after_test\n        user.post_authorized_user(user.request_json)\n        user.assert_status_code_and_json(QCUOD.AUTHORIZATION_RESPONSE_STATUS_CODE,\n                                         QCUOD.AUTHORIZATION_BODY_RESPONSE)\n    \n        burger = create_burger\n        burger.get_current_user_orders_endpoint(number_of_orders)\n>       burger.assert_status_code_and_json_for_get_orders_endpoint(QCUOD.GET_CURRENT_USER_ORDERS_SUCCESS_STATUS_CODE,\n                                                                   QCUOD.GET_CURRENT_USER_ORDERS_SUCCESS_BODY)\n\ntests/test_get_current_user_orders.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <endpoints.get_current_user_orders_endpoint.CurrentUserOrdersEndpoint object at 0x10253ffe0>, checked_status_code = 200\nstandard_json = {'orders': [{'_id': '', 'createdAt': '2021-06-23T20:11:01.403Z', 'ingredients': ['60d3463f7034a000269f45e9', '60d3463f7034a000269f45e7'], 'number': 1, ...}], 'success': True, 'total': 2, 'totalToday': 2}\ncreated_orders_num = 1\n\n    @allure.step('Проверка статус кода и структуры ответа при получении списка заказов')\n    def assert_status_code_and_json_for_get_orders_endpoint(self, checked_status_code,\n                                                            standard_json,\n                                                            created_orders_num=1):\n    \n>       assert len(self.response.json()[\"orders\"]) == created_orders_num\nE       KeyError: 'orders'\n\nendpoints/base_endpoint.py:28: KeyError"}, "description": "Тест падает, хотя должен проходить", "steps": [{"name": "САвторизация пользователя", "status": "passed", "parameters": [{"name": "json_data", "value": "{'email': 'zt8ek5t0@yandex.ru', 'password': '6xu4mtxw', 'name': 'urijdrgb'}"}, {"name": "not_created", "value": "None"}], "start": 1730050701151, "stop": 1730050701914}, {"name": "Проверка статус кода и структуры ответа", "status": "passed", "parameters": [{"name": "checked_status_code", "value": "200"}, {"name": "standard_json", "value": "{'success': True, 'accessToken': 'Bearer ...', 'refreshToken': '', 'user': {'email': '', 'name': ''}}"}], "start": 1730050701915, "stop": 1730050701915}, {"name": "Получение списка заказов конкретного пользователя", "status": "passed", "parameters": [{"name": "repeat_create_order", "value": "50"}], "start": 1730050701915, "stop": 1730050774049}, {"name": "Проверка статус кода и структуры ответа при получении списка заказов", "status": "broken", "statusDetails": {"message": "KeyError: 'orders'\n", "trace": "  File \"/Users/dmitriydemidov/PycharmProjects/Diplom_2/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/dmitriydemidov/PycharmProjects/Diplom_2/endpoints/base_endpoint.py\", line 28, in assert_status_code_and_json_for_get_orders_endpoint\n    assert len(self.response.json()[\"orders\"]) == created_orders_num\n               ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n"}, "parameters": [{"name": "checked_status_code", "value": "200"}, {"name": "standard_json", "value": "{'success': True, 'orders': [{'ingredients': ['60d3463f7034a000269f45e9', '60d3463f7034a000269f45e7'], '_id': '', 'status': 'done', 'number': 1, 'createdAt': '2021-06-23T20:11:01.403Z', 'updatedAt': '2021-06-23T20:11:01.406Z'}], 'total': 2, 'totalToday': 2}"}, {"name": "created_orders_num", "value": "1"}], "start": 1730050774049, "stop": 1730050774049}], "parameters": [{"name": "number_of_orders", "value": "50"}], "start": 1730050701150, "stop": 1730050774050, "uuid": "e877bae4-d248-45f7-b583-4f0e3829527e", "historyId": "67144d9324f9df55d408c00e9ba50ec1", "testCaseId": "bc25494105d0c8f5f16433e1510e5f53", "fullName": "tests.test_get_current_user_orders.TestGetCurrentUserOrders#test_get_current_user_with_same_orders", "labels": [{"name": "feature", "value": "Проверки полученя заказов конкретного пользователя"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_current_user_orders"}, {"name": "subSuite", "value": "TestGetCurrentUserOrders"}, {"name": "host", "value": "MacBook-Air-Dmitriy.local"}, {"name": "thread", "value": "27953-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_current_user_orders"}]}